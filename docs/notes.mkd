This file contains notes made while making chibiruby, including questions (maybe later answered), notes about where to look for docs on Ruby, difficulties faced etc. etc.

C
=
* I stared off with [Huw Collingbourne's course on Udemy](http://www.udemy.com/c-programming-for-beginners/), which was a great refresher on C.
* Got a couple of O'Reilly books also at the time, but wanted a more tutorial format so haven't used them yet.
* For testing, I started with MinUnit which was nice for writing simple tests and getting started. After I while I rewrote the tests using [libtap](http://github.com/zorgnax/libtap) which meant I could refactor tests into functions, and get some convenience functions also.
* I should really use a hash table for looking up keywords. Ruby uses `gperf` and a `keywords` file which generates a very fast lookup table for that specific list of keys.
* Used `int` for lexer current pos (and other position indexes) originally, but since `len(string)` returns an `unsigned long` I changed all these types to `unsigned long`. Allows for parsing longer strings, but uses more storage per token. May change later.

Ruby
=
* It's really hard to know where to start, so I started with trying to tokenise to match the `Ripper.lex` output.
  * After a while, I saw that just using OPERATOR for the type was making it harder to perform a lookahead, so changed to storing the token type (greater than, less than etc.)
* Reading through the RHG showed how MRI does it, but I was getting lost in the details, I wanted to first just see the grammar rules.
* I later found the Ruby draft specification [here](http://www.ipa.go.jp/osc/english/ruby/)
  * Lexer - Start with 8.7 Tokens
* Then, I went back to look at `parse_yylex()`.
* Why does ruby `Ripper.lex` output contain 'ignored newlines'? (`on_ignored_nl`) v.s. 'newlines' (`on_nl`)?
  * A: Because somtimes newlines denote the end of a statement and sometimes they do not. The RHG talks about this in Chapter 11.
  * But then... in `Ripper.lex` output, why are whitespace and comments tokens contain all of the content?
* The content in RHG Chapter 11 about `lex_state` was really helpful for implementing this. To begin with I just implemented the state changes as described before really understanding why they changed at those points.
* You can get the grammar from the ruby `parse.y` with `ruby sample/exyacc.rb < parse.y`